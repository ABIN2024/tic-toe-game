def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board, player):
    for row in board:
        if all(cell == player for cell in row):
            return True

    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True

    if all(board[i][i] == player for i in range(3)) or all(board[i][2-i] == player for i in range(3)):
        return True

    return False

def is_board_full(board):
    return all(cell != " " for row in board for cell in row)

def tic_tac_toe():
    board = [[" " for _ in range(3)] for _ in range(3)]
    players = ["X", "O"]
    player_idx = 0

    while True:
        print_board(board)
        current_player = players[player_idx]

        while True:
            try:
                row = int(input(f"Player {current_player}, enter the row number (0, 1, or 2): "))
                col = int(input(f"Player {current_player}, enter the column number (0, 1, or 2): "))

                if board[row][col] == " ":
                    board[row][col] = current_player
                    break
                else:
                    print("Cell already occupied. Try again.")

            except (ValueError, IndexError):
                print("Invalid input. Please enter a number between 0 and 2.")

        if check_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break
        elif is_board_full(board):
            print_board(board)
            print("It's a draw!")
            break

        player_idx = 1 - player_idx

if __name__ == "__main__":
    tic_tac_toe()
